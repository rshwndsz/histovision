# Histovision version
version: 0.1.0
# Don't create checkpoint files
debugging: False
device: cuda

defaults:
  # Custom logging
  - hydra/job_logging: custom
  # Custom output for --help
  - hydra/help: custom
    # Loss function
  - criterion: JaccardLoss
  - scheduler: ReduceLROnPlateau

dataset: ???  # Required, Specify at runtime
model: ???    # Required, Specify at runtime
optimizer: Adam
# Function to get dataloaders: provider(phase, cfg)
provider: histovision.datasets.segdataset.provider
# Trainer object: Trainer(cfg)
trainer: histovision.trainers.BinaryTrainer
# Testing object: Tester(cfg)
tester: histovision.testers.BinaryTester

hyperparams:
  batch_size:
    train: 32
    val: 32
    test: 1
  lr: 3e-4

# Parameters for dataloader in provider
dataloader:
  num_workers: 4
  pin_memory: True
  shuffle: True

# Parameters for training loop
training:
  start_epoch: 1
  num_epochs: 100
  val_freq: 4
  early_stop:
    patience: 6
  cudnn_benchmark: true

testing:
  save_predictions: False
  save_dir: test_preds

scores:
  loss:
    class: histovision.losses.MixedLoss
  iou:
    fn: histovision.metrics.iou_score
  dice:
    fn: hisovision.metrics.dice_score
  acc:
    fn: histovision.metrics.acc_score
  prec:
    fn: histovision.metrics.precision_score

# Data augmentations
augmentations:
  train:
    common:
#      ShiftScaleRotate:
#        shift_limit: 0
#        scale_limit: 0
#        rotate_limit: 15
#        p: 0.5
#      Flip:
#        p: 0.5
#      RandomRotate90:
#        p: 0.5
#      RandomBrightnessContrast:
#        p: 0.5
#      ElasticTransform:
#        p: 0.5
      RandomSizedCrop:
        min_max_height: [256, 256]
        height: ${dataset.image_size}
        width: ${dataset.image_size}
        w2h_ratio: 1.0
        interpolation: 1 # cv2.INTER_LINEAR
        p: 1.0

    img_only:
      Normalize:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        always_apply: true

    mask_only:

    final:
      ToTensorV2:

  val:
    common:
      RandomSizedCrop:
        min_max_height: [256, 256]
        height: ${dataset.image_size}
        width: ${dataset.image_size}
        w2h_ratio: 1.0
        interpolation: 1 # cv2.INTER_LINEAR
        p: 1.0

    img_only:
      Normalize:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        always_apply: true

    mask_only:

    final:
      ToTensorV2:

  test:
    common:
      RandomSizedCrop:
        min_max_height: [256, 256]
        height: ${dataset.image_size}
        width: ${dataset.image_size}
        w2h_ratio: 1.0
        interpolation: 1 # cv2.INTER_LINEAR
        p: 1.0

    img_only:
      Normalize:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        always_apply: true

    mask_only:

    final:
      ToTensorV2:

# Some important paths relative to outputs/date/time
final_weights_path: checkpoints/final_weights.pth
best_weights_path: checkpoints/best_weights.pth
