# Histovision version
version: 0.1.0
# Don't create checkpoint files
debugging: False
device: cuda

defaults:
  # Custom logging
  - hydra/job_logging: custom
  # Custom output for --help
  - hydra/help: custom
    # Loss function
  - criterion: MixedLoss
  - scheduler: ReduceLROnPlateau

dataset: ???  # Required, Specify at runtime
model: ???    # Required, Specify at runtime
optimizer: Adam
# Function to get dataloaders: provider(phase, cfg)
provider: histovision.datasets.segdataset.provider
# Trainer object: Trainer(cfg)
trainer: histovision.trainers.BinaryTrainer
# Testing object: Tester(cfg)
tester: histovision.testers.BinaryTester

hyperparams:
  # Initial learning rate
  lr: 3e-4

# Parameters for dataloader in provider
dataloader:
  # Number of workers
  num_workers: 4
  # Load samples on CPU and send to GPU
  # See: https://discuss.pytorch.org/t/when-to-set-pin-memory-to-true/19723/2
  pin_memory: True
  shuffle: True

# Parameters for training loop
training:
  # Start from this epoch
  start_epoch: 1
  # Total number of epochs for training
  num_epochs: 100
  # Validate every `val_freq` epochs
  # Must be >= `num_epochs`
  val_freq: 4
  # Batch size for training, validation & testing
  batch_size:
    train: 32
    val: 32
    test: 1
  # Stop training if model doesn't improve for `patience` epochs
  early_stop:
    patience: 6
  # Enable faster convolutions at the expense of memory
  cudnn_benchmark: true
  # Directory to store plots at the end of training
  # Relative to outputs/date/time or multiruns/date/time/job
  results_dir: results/

testing:
  # Path to checkpoint file
  # By default set to `best_weights.pth` in `checkpoints/` of `hydra.run.dir`
  checkpoint_path: ${best_weights_path}
  # Save predictions as .png files or show plots
  # Showing plots is a blocking op and leads to problems in multirun
  save_predictions: True
  # Directory to save predictions on the test set
  # Relative to outputs/date/time/ or multirun/date/time/job/
  testing_dir: predictions/

scores:
  iou:
    fn: histovision.metrics.iou_score
  dice:
    fn: hisovision.metrics.dice_score
  acc:
    fn: histovision.metrics.accuracy
    params:
      num_classes: 2
  prec:
    fn: histovision.metrics.precision
    params:
      num_classes: 2

# Data augmentations
augmentations:
  train:
    common:
      ShiftScaleRotate:
        shift_limit: 0
        scale_limit: 0
        rotate_limit: 15
        p: 0.5
      Flip:
        p: 0.5
      RandomRotate90:
        p: 0.5
      RandomBrightnessContrast:
        p: 0.5
      ElasticTransform:
        p: 0.5
      RandomSizedCrop:
        min_max_height: [256, 256]
        height: ${dataset.image_size}
        width: ${dataset.image_size}
        w2h_ratio: 1.0
        interpolation: 1 # cv2.INTER_LINEAR
        p: 1.0

    img_only:
      Normalize:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        always_apply: true

    mask_only:

    final:
      ToTensorV2:

  val:
    common:
      RandomSizedCrop:
        min_max_height: [256, 256]
        height: ${dataset.image_size}
        width: ${dataset.image_size}
        w2h_ratio: 1.0
        interpolation: 1 # cv2.INTER_LINEAR
        p: 1.0

    img_only:
      Normalize:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        always_apply: true

    mask_only:

    final:
      ToTensorV2:

  test:
    common:
      Resize:
        height: ${dataset.image_size}
        width: ${dataset.image_size}
        interpolation: 1
        always_apply: True
        p: 1

    img_only:
      Normalize:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        always_apply: true

    mask_only:

    final:
      ToTensorV2:

# Some important paths relative to outputs/date/time
# Path to checkpoint file saved at the end of training
final_weights_path: checkpoints/final_weights.pth
# Path to checkpoint file saved at the end of best validation loop
best_weights_path: checkpoints/best_weights.pth
